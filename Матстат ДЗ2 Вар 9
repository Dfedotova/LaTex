\documentclass{article}
\usepackage[T2A]{fontenc}
\usepackage{amsfonts}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage[argument]{graphicx}
\usepackage{amsmath}
\usepackage[left=3.5cm,right=3.5cm, top=2cm,bottom=2cm,bindingoffset=0cm]{geometry}

\author{Вариант 9}
\date{Задача 2}

\begin{document}

\maketitle

\paragraph{1. Рассчитайте 100 псевдослучайных чисел методом, соответствующим вашему варианту.}

$\\\\$По условию задачи необходимо рассчитайть 100 псевдослучайных чисел линейным конгруэнтным методом с начальными значениями $z_1 = 2456$, $a = 2119$, $b = 0$, $m = 32767$.

$\\$С помощью специально написанного кода (см. Приложение) рассчитываем 100 псевдослучайных чисел.

$\\$Согласно алгоритму вычисления псевдослучайных чисел линейно конгруэнтным методом изначально задаются 4 числа: $z_1$ - первый элемент последовательности, $a$ и $b$ - коэффициенты, $m$ - модуль.

$\\$Каждое последующее число вычисляется по формуле: $z_i = \dfrac{a\cdot z_{i - 1} + b}{m}$. Чтобы получить последовательность $x_i$, элементы которой лежат в пределах [0; 1), необходимо каждый элемент $z_i$ целочисленно поделить на $m$.

$\\$Полученная последовательность $x_i$:
\begin{center}
\includegraphics[scale = 0.55]{images/seq.jpg}
\end{center}


\paragraph{2. Приведите первые 10 чисел этой последовательности.}
$\\\\$Первые 10 чисел представлены в 1 строке: 0.0749535, $ $ 0.82638, $ $ 0.0996429, $ $ 0.143376, $ $ 0.813654, $ $ 0.132786, $ $ 0.373608, $ $ 0.67449, $ $ 0.243416, $ $ 0.797723.

\paragraph{3. Постройте гистограмму с 10 столбцами для полученной последовательности.}
$\\$Чтобы построить диаграмму, посчитаем диапазоны и частоты в полученной последовательности $x_i$. 

$\\$Последовательность нужно отсортировать по возрастанию, разделить интервал [0; 1) на 10 равных интервалов и посчитать частоты, т.е. количество элементов, входящих в каждый интервал:

\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & наблюдаемая частота ($O$) \\ \hline
    [0; 0.1) & 13\\ \hline
    [0.1; 0.2) & 8\\ \hline
    [0.2; 0.3) & 11\\ \hline
    [0.3; 0.4) & 8\\ \hline
    [0.4; 0.5) & 11\\ \hline
    [0.5; 0.6) & 6\\ \hline
    [0.6; 0.7) & 16\\ \hline
    [0.7; 0.8) & 8\\ \hline
    [0.8; 0.9) & 11\\ \hline
    [0.9; 1) & 8\\ \hline
    \end{tabular}
\end{center}
\\

$\\$Гистограмма, построенная по таблице частот:
\begin{center}
\includegraphics[scale = 0.55]{images/hist.jpg}
\end{center}

\paragraph{4. Проверьте гипотезу о том, что последовательность имеет распределение $R(0, 1)$ критерием хи-квадрат, разбив интервал [0; 1) на десять равных интервалов.}

$\\\\$Введем гипотезы:
$\\H_0$: последовательность распределена по закону $R(0, 1)$.
$\\H_{A}$: последовательность не распределена по закону $R(0, 1)$.

$\\$В п.3 посчитаны частоты для 10 равных интервалов. Посчитаем значение статистики $\chi^2$ и сравним его с $\chi^2_{k - 1}.$

$\\$Общий вид статистики:
$$\chi^2 = \sum \limits_{j = 1}^k \dfrac{(O_j - E_j)^2}{E_j} \stackrel{H_0}{\sim} \chi_{k - 1}^2$$

$\\$Здесь ожидаемая частота:
$$E = np = 100 \cdot \dfrac{1}{10} = 10 \text{, (в каждом интервале ожидается 10 элементов)}$$

$\\$Подставляем полученные значения и досчитываем значение статистики (посчитано программой):
$$\chi^2 = \sum \limits_{j = 1}^{10} \dfrac{(O_j - 10)^2}{10} = 8 \text{, ($k = 10$, т.к. интервал [0; 1) разбит на 10 равных)}$$

$\\$По условию уровень значимости принимаем равным 5\%. Ищем значение по таблице процентных точек распределения хи-квадрат:
$$\chi^2_{k - 1; \alpha} = \chi^2_{9; 0.05} \approx 16.919$$

$\\$Сравним $\chi^2$ и $\chi_{k - 1, \alpha}^2$. 8 < 16.919 $\Rightarrow$ \textbf{нет оснований отвергнуть гипотезу $H_0$} о том, что последовательность имеет распределение R(0, 1). Т.к. согласно критерию согласия хи-квадрат:
$\\$1) $H_0 \text{ отвергается при } \chi^2 > \chi_{k - 1, \alpha}^2$
$\\$2) $H_0 \text{ принимается при } \chi^2 \leq \chi_{k - 1, \alpha}^2$


\paragraph{5. Повторите шаги 3 и 4 для последовательности длиной в 10000 чисел.}

$\\$Сортируем последовательность $x_i$ из 10000 элементов и вычисляем частоты для 10 равных интервалов:           

\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & наблюдаемая частота ($O$) \\ \hline
    [0; 0.1) & 937\\ \hline
    [0.1; 0.2) & 800\\ \hline
    [0.2; 0.3) & 1001\\ \hline
    [0.3; 0.4) & 734\\ \hline
    [0.4; 0.5) & 1133\\ \hline
    [0.5; 0.6) & 666\\ \hline
    [0.6; 0.7) & 1402\\ \hline
    [0.7; 0.8) & 1328\\ \hline
    [0.8; 0.9) & 1199\\ \hline
    [0.9; 1) & 800\\ \hline
    \end{tabular}
\end{center}
\\

$\\$Гистограмма, построенная по таблице частот:
\begin{center}
\includegraphics[scale = 0.55]{images/hist2.jpg}
\end{center}

$\\$Проверим гипотезу. Вводим основную и альтернативную гипотезы:
$\\H_0$: последовательность имеет распределение $R(0, 1)$.
$\\H_{A}$: последовательность не распределена по закону $R(0, 1)$.

$\\$Ранее посчитаны частоты для 10 равных интервалов. Посчитаем значение статистики $\chi^2$ и сравним его с $\chi^2_{k - 1}.$

$\\$Ожидаемая частота:
$$E = np = 10000 \cdot \dfrac{1}{10} = 1000 \text{, (в каждом интервале ожидается по 1000 элементов)}$$

$\\$Подставив полученные значения, досчитываем значение статистики:
$$\chi^2 = \sum \limits_{j = 1}^{10} \dfrac{(O_j - 1000)^2}{1000} = 592.76, \text{($k = 10$, т.к. у интервал [0; 1) разбит на 10 равных)}$$

$\\$Значение $\chi^2_{k - 1}$ мы находили ранее:
$$\chi^2_{k - 1; \alpha} = \chi^2_{9; 0.05} \approx 16.919$$

$\\$Сравним $\chi^2$ и $\chi_{k - 1, \alpha}^2$. 592.76 < 16.919 $\Rightarrow$ \textbf{отвергаем гипотезу $H_0$} о том, что последовательность имеет распределение R(0, 1). Т.к. согласно критерию согласия хи-квадрат:
$\\$1) $H_0 \text{ отвергается при } \chi^2 > \chi_{k - 1, \alpha}^2$
$\\$2) $H_0 \text{ принимается при } \chi^2 \leq \chi_{k - 1, \alpha}^2$

\paragraph{6. Изучите тест перестановок (он описан на третьей странице) и проверьте этим тестом
первые 9999 чисел вашей последовательности, разбив их на тройки.}

$\\\\$Для тестирования используем последовательность $x_i$, в которой 10000 чисел лежат в пределах [0; 1) (возьмем из данной последовательности первые 9999 чисел). Создаем вектор троек, в котором записаны 6 возможных перестановок, и массив-счетчик, в который мы запишем посчитанные частоты. Получаем частоты:

\begin{center}
    \begin{tabular}{ | c | c | }
    \hline
    тройка & частота \\ \hline
    \{1, 2, 3\} & 533\\ \hline
    \{1, 3, 2\} & 867\\ \hline
    \{2, 1, 3\} & 267\\ \hline
    \{2, 3, 1\} & 533\\ \hline
    \{3, 1, 2\} & 466\\ \hline
    \{3, 2, 1\} & 667\\ \hline
    \end{tabular}
\end{center}
\\       

$\\$Гистограмма частот:
\begin{center}
\includegraphics[scale = 0.55]{images/hist3.jpg}
\end{center}

$\\$Проверка гипотезы о равновероятности перестановок. Вводим основую и альтернативную гипотезы:
$\\H_0$: перестановки равновероятны
$\\H_A$: перестановки не равновероятны

$\\$Находим ожидаемую частоту:
$$E = np = 3333 \cdot \dfrac{1}{6} = 555.5$$
$$\text{(имеем n = 3333 троек и p = $\frac{1}{6}$ - вероятность получения одной из перестановок)}$$

$\\$Подставляем значения и досчитываем статистику:
$$\chi^2 = \sum \limits_{j = 1}^{6} \dfrac{(O_j - 555.5)^2}{555.5} = 363.131$$

$\\$Ищем по таблице значение $\chi^2_{k - 1; \alpha}$ (здесь $k = 6$, т.к. всего у нас 6 возможных троек):
$$\chi^2_{k - 1; \alpha} = \chi^2_{5; 0.05} \approx 11.07$$

$\\$Сравним $\chi^2$ и $\chi_{k - 1, \alpha}^2$. 363.131 < 11.07 $\Rightarrow$ \textbf{отвергаем гипотезу $H_0$} о том, что перестановки равновероятны. Т.к. согласно критерию согласия хи-квадрат:
$\\$1) $H_0 \text{ отвергается при } \chi^2 > \chi_{k - 1, \alpha}^2$
$\\$2) $H_0 \text{ принимается при } \chi^2 \leq \chi_{k - 1, \alpha}^2$

\paragraph{Ответ:}

$\\$2. Первые 10 элементов последовательности:
$\\$0.0749535, $ $ 0.82638, $ $ 0.0996429, $ $ 0.143376, $ $ 0.813654, $ $ 0.132786, $ $ 0.373608, $ $ 0.67449, $ $ 0.243416, $ $ 0.797723;

$\\$4. Нет оснований  отвергнуть гипотезу $H_0$ о том, что последовательность имеет распределение $R(0, 1)$;

$\\$5. Гипотеза $H_0$ о том, что последовательность имеет распределение $R(0, 1)$, отвергается;

$\\$6. Последовательность не проходит тест перестановок, т.к. гипотеза о том, что перестановки равновероятны, отвергается.

%-------------------------------------

\newpage
\begin{center}
\textbf{Приложение}
\end{center}

\begin{flushright}
Код программы.
\end{flushright} 
\begin{verbatim}

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

/// Метод для получения последовательности линейным конгруэнтным методом.
/// Сначала получаем последовательность z_i по формуле самого метода.
/// Затем делим каждое значение z_i на m для получения x_i.
/// \param n - количество элементов (100/10000)
/// \return  - возвращает последовательность x_i
vector<double> getSequence(int n) {
    vector<int> sequence;
    sequence.push_back(2456); // z_1
    int a = 2119;
    int b = 0;
    int m = 32767;

    for (int i = 1; i < n; ++i)
        sequence.push_back((a * sequence[i - 1] + b) % m);

    vector<double> ranged_sequence;
    ranged_sequence.reserve(sequence.size());
    for (int i : sequence)
        ranged_sequence.push_back((double) i / m);

    cout << "\nSequence:\n";
    for (int i = 0; i < ranged_sequence.size(); ++i) {
        cout << ranged_sequence[i] << " ";
        if ((i + 1) % 10 == 0) cout << "\n";
    }

    return ranged_sequence;
}

/// Метод для получения частот.
/// \param sequence - последовательность, для которой ищутся частоты
/// \return         - возвращает вектор частот
vector<int> getFrequencies(vector<double> sequence) {
    sort(sequence.begin(), sequence.end());
    vector<double> borders = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1};
    vector<int> frequencies(10, 0);

    for (double i : sequence)
        for (int j = 0; j < borders.size(); ++j)
            if (i >= borders[j - 1] && i < borders[j])
                frequencies[j]++;

    cout << "\nFrequencies: ";
    for (int f : frequencies)
        cout << f << " ";

    return frequencies;
}

/// Метод для нахождения значения статистики chi^2.
/// \param frequencies - вектор частот (исследуемых)
/// \param expected    - ожидаемая частота
/// \param n           - количество частот
void findChi(const vector<int> &frequencies, double expected, int n) {
    double chi = 0;

    for (int i = 0; i < n; ++i)
        chi += (double) (pow(frequencies[i] - expected, 2)) / expected;

    cout << "\n\nChi^2 = " << chi;
}

/// Метод для определения рангов элементов троек.
/// \param x - первое значение тройки
/// \param y - второе значение тройки
/// \param z - третье значение тройки
/// \return  - возвращает тройку
vector<int> definingTriple(double x, double y, double z) {
    if (z >= x && z >= y && y >= x)
        return {1, 2, 3};
    else if (x >= y && x >= z && z >= y)
        return {3, 1, 2};
    else if (y >= x && y >= z && x >= z)
        return {2, 3, 1};
    else if (y >= x && y >= z && z >= x)
        return {1, 3, 2};
    else if (x >= y && x >= z && y >= z)
        return {3, 2, 1};
    else return {2, 1, 3};
}

/// Метод для проведения теста перестановок.
/// \param sequence - последовательность x_i
void permutationTest(vector<double> sequence) {
    vector<vector<int>> triples = {{1, 2, 3},
                                   {1, 3, 2},
                                   {2, 1, 3},
                                   {2, 3, 1},
                                   {3, 1, 2},
                                   {3, 2, 1}};
    vector<int> count(6, 0);

    for (int i = 0; i < 9999; i += 3)
        for (int j = 0; j < 6; ++j)
            if (triples[j] == definingTriple(sequence[i], sequence[i + 1], sequence[i + 2]))
                ++count[j];

    for (int c : count)
        cout << c << " ";

    findChi(count, 555.5, 6);
}

int main() {
    int n;
    cout << "Input size of sequence: ";
    cin >> n;

    // Получаем последовательность  линейным конгруэнтным методом
    vector<double> sequence = getSequence(n);

    // Получаем частоты для построения гистограммы
    vector<int> frequencies = getFrequencies(sequence);

    // Считаем значение статистики хи
    findChi(frequencies, (double) n / 10, 10);

    // Проверка теста перестановок
    if (n == 10000) {
        cout << "\n\nPermutation test: ";
        permutationTest(sequence);
    }

    return 0;
}


\end{verbatim} 


\end{document}
