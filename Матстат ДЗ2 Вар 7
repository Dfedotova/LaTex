\documentclass{article}
\usepackage[T2A]{fontenc}
\usepackage{amsfonts}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage[left=3cm,right=3cm, top=2cm,bottom=2cm,bindingoffset=0cm]{geometry}
\usepackage{wrapfig}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{graphicx}
\graphicspath{{pictures/}}
\DeclareGraphicsExtensions{.pdf,.png,.jpg}
\usepackage{amsmath}
% подключаем hyperref (для ссылок внутри  pdf)
\usepackage[unicode, pdftex]{hyperref}
\usepackage[usenames]{color}
\usepackage{ragged2e}

\begin{document}

\begin{center}
\textbf{Домашнее задание №2}
\end{center}

\begin{center}
Федотова Дарья БПИ191. Вариант 7
\end{center}

\begin{center}
\tableofcontents
\end{center}

\newpage

\begin{center}
\section{Условие задачи}
\end{center}

\paragraph{Задача. Тестирование последовательностей псевдослучайных чисел.}

$\\\\$Датчики псевдослучайных чисел разрабатываются так, чтобы генерируемые ими
последовательности можно было считать реализациями независимых случайных величин,
равномерно распределённых на единичном отрезке. Ваше задание — реализовать такой
датчик и проверить генерируемую последовательность на равномерность и независимость.
$\\$Выполните следующие шаги:
$\\$1. Рассчитайте 100 псевдослучайных чисел методом, соответствующим вашему варианту.
Описание методов дано на второй и третьей страницах.
$\\$2. Приведите первые 10 чисел этой последовательности.
$\\$3. Постройте гистограмму с 10 столбцами для полученной последовательности.
$\\$4. Проверьте гипотезу о том, что последовательность имеет распределение R(0, 1) критерием хи-квадрат, разбив интервал [0; 1) на десять равных интервалов.
$\\$5. Повторите шаги 3 и 4 для последовательности длиной в 10000 чисел.
$\\$6. Изучите тест перестановок (он описан на третьей странице) и проверьте этим тестом
первые 9999 чисел вашей последовательности, разбив их на тройки.
$\\$Используйте уровень значимости 5\%.

$\\$\textbf{Метод генерации псевдослучайных чисел: 
$\\$Метод серединных произведений, $z_1 = 3308$, $z_2 = 1949$.}

%------------------------------------

\newpage
\begin{center}
\section{Решение}
\end{center}

\begin{center}
\subsection{Рассчет псевдослучайных чисел методом серединных произведений}
\end{center}

С помощью кода, написанного на C++ и приведенного в приложении, рассчитываем 100 псевдослучайных чисел (последовательность $z_i$) методом серединных произведений (в п. 2.2 завершаем алгоритм расчета делением каждого элемента последовательности на 10000 с целью получить окончательную последовательность $x_i$): \\

\begin{center}
\includegraphics[scale = 0.65]{images/seq.jpg}
\end{center}

Как получилась данная последовательность:\\

1) Перемножаем значения $z_1$ и $z_2$ из условия и получаем восьмизначное число. Из него выбираем 4 средние цифры - это новое число последовательности $z_3$ (в нашем случае - 4472).\\

2) Новое число $z_3$ перемножаем с предыдущим элементом последовательности, чтобы получить значение $z_4$ путем вычленения 4 цифр из середины полученного числа. Повторяем данные действия до тех пор, пока размер последовательности не составит 100.\\

3) Если при перемножении двух четырехзначных чисел мы получаем число, в котором меньше 8 цифр, мы считаем, что в начале числ стоят 0 (например, полученное число 893647, тогда $z_i$ элемент последовательности будет равен 8936).\\

4) Также может произойти ситуация, когда внутри числа будут присутствовать 0. В таком случае мы можем получить не четырехзначный элемент последовательности, а двух- или трехзначный. Однако когда мы будем получать последовательность в пределах от нуля до единицы, числа будут иметь 4 знака после запятой.\\

%-------------------------------------- 

\newpage
\begin{center}
\subsection{Первые 10 чисел последовательности $x_i$}
\end{center}

Получаем последовательность в пределах $[0, 1)$ ($\frac{z_i}{10000}$):\\

\begin{center}
\includegraphics[scale = 0.65]{images/seq01.jpg}
\end{center}

$\\$Первые 10 чисел представлены в 1 строке:
$\\$\textbf{0.3308; 0.1949; 0.4472; 0.7159; 0.015; 0.0738; 0.1107; 0.8169; 0.043; 0.5126}\\

%------------------------------------

\newpage
\begin{center}
\subsection{Гистограмма для последовательности из 100 чисел}
\end{center}

Чтобы построить диаграмму, необходимо получить диапазоны и частоты в данной последовательности. 

1) Сортируем нашу последовательность в порядке возрастания:
\begin{center}
\includegraphics[scale = 0.5]{images/sorted.jpg}
\end{center}

2) Вычисляем шаг диапазонов: 
$$(\textit{max - min}) / 10 = \dfrac{0.9968 - 0.0023}{10} = 0.09945$$

3) Вычисляем границы диапазонов. Первая граница равна \textit{(min + step)}, последующие границы равны \textit{(border[i - 1] + step)}. Таким образом получаем 10 границ (посчитано в программе):
$$\textbf{0.10175; 0.2012; 0.30065; 0.4001; 0.49955; 0.599; 0.69845; 0.7979; 0.89735; 0.9968}$$

4) Для удобства округляем границы диапазонов до 3-х знаков после запятой. В таблице отобразим получившиеся диапазоны и частоты (сколько чисел попало в тот или иной диапазон, также посчитаны программой):

\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & частота \\ \hline
    [0.01; 0.102) & 14\\ \hline
    [0.102; 0.201) & 8\\ \hline
    [0.201; 0.301) & 9\\ \hline
    [0.301; 0.4) & 11\\ \hline
    [0.4; 0.499) & 13\\ \hline
    [0.499; 0.599) & 14\\ \hline
    [0.599; 0.699) & 4\\ \hline
    [0.699; 0.799) & 8\\ \hline
    [0.799; 0.897) & 7\\ \hline
    [0.897; 0.997) & 12\\ \hline
    \end{tabular}
\end{center}

5) На основе полученных данных строим гистограмму:
\begin{center}
\includegraphics[scale = 0.5]{images/hist.jpg}
\end{center}

%-------------------------------------

\newpage
\begin{center}
\subsection{Проверка гипотезы для последовательности из 100 чисел}
\end{center}

Проверяем гипотезу о том, что последовательность имеет распределение $R(0, 1)$ критерием хи-квадрат, разбив интервал [0; 1) на десять равных интервалов.

$\\H_0$: последовательность имеет распределение $R(0, 1)$.
$\\H_{A}$: последовательность имеет распределение, отличное от $R(0, 1)$.\\

1) Делим интервал [0; 1) на 10 равных интервалов и находим частоты (посчитаны программой):
\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & наблюдаемая частота ($O$) \\ \hline
    [0; 0.1) & 14\\ \hline
    [0.1; 0.2) & 8\\ \hline
    [0.2; 0.3) & 9\\ \hline
    [0.3; 0.4) & 11\\ \hline
    [0.4; 0.5) & 13\\ \hline
    [0.5; 0.6) & 14\\ \hline
    [0.6; 0.7) & 4\\ \hline
    [0.7; 0.8) & 8\\ \hline
    [0.8; 0.9) & 8\\ \hline
    [0.9; 1) & 11\\ \hline
    \end{tabular}
\end{center}
\\

2) Находим ожидаемую частоту:
$$E = np^0 = 100 \cdot 0.1 = 10$$

3) Статистика имеет вид:
$$\chi^2 = \sum \limits_{j = 1}^k \dfrac{(O_j - E_j)^2}{E_j} \stackrel{H_0}{\sim} \chi_{k - 1}^2$$

Подставив значения, получаем (посчитано программой):
$$\chi^2 = \sum \limits_{j = 1}^{10} \dfrac{(O_j - 10)^2}{10} = 9.2$$

Здесь $k = 10$, т.к. у нас интервал [0; 1) разбит на 10 равных интервалов.$\\$

4) Уровень значимости мы принимаем равным 5\%. Ищем по таблице значение:
$$\chi^2_{k - 1; \alpha} = \chi^2_{9; 0.05} \approx 16.919$$

5) Критерий гласит:
$$\text{при } \chi^2 > \chi_{k - 1, \alpha}^2 \text{   } H_0 \text{ отвергается}$$
$$\text{при } \chi^2 \leq \chi_{k - 1, \alpha}^2 \text{  нет оснований отвергнуть } H_0$$

В нашем случае $\chi^2 = 9.2 < \chi_{k - 1, \alpha}^2 = 16.919$ $\Rightarrow$ нет оснований отвергнуть гипотезу $H_0$ о том, что последовательность имеет распределение R(0, 1).

%-------------------------------------

\newpage
\begin{center}
\subsection{Гистограмма и проверка гипотезы для последовательности из 10000 чисел}
\end{center}

Пункты 3 и 4 повторяем для последовательности в 10000 чисел.\\

1) Сортируем последовательность $x_i$ и 2) вычисляем шаг диапазонов: 
$$(\textit{max - min}) / 10 = \dfrac{0.9979 - 0.0022}{10} = 0.09957$$

2) Получаем 10 границ (посчитано в программе):
$$\textbf{0.10177; 0.20134; 0.30091; 0.40048; 0.50005; 0.59962; 0.69919; 0.79876; 0.89833; 0.9979}$$

3) Для удобства округляем границы диапазонов до 3-х знаков после запятой. 

\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & частота \\ \hline
    [0.01; 0.102) & 1331\\ \hline
    [0.102; 0.201) & 681\\ \hline
    [0.201; 0.301) & 1309\\ \hline
    [0.301; 0.4) & 691\\ \hline
    [0.4; 0.5) & 1315\\ \hline
    [0.5; 0.599) & 677\\ \hline
    [0.599; 0.699) & 1314\\ \hline
    [0.699; 0.799) & 678\\ \hline
    [0.799; 0.898) & 1316\\ \hline
    [0.898; 0.998) & 688\\ \hline
    \end{tabular}
\end{center}

4) На основе полученных данных строим гистограмму:
\begin{center}
\includegraphics[scale = 0.5]{images/hist2.jpg}
\end{center}

5) Проверяем гипотезу.

$\\H_0$: последовательность имеет распределение $R(0, 1)$.
$\\H_{A}$: последовательность имеет распределение, отличное от $R(0, 1)$.\\

Делим интервал [0; 1) на 10 равных интервалов и находим частоты:
\begin{center}
    \begin{tabular}{ | l | c | }
    \hline
    диапазон & наблюдаемая частота ($O$) \\ \hline
    [0; 0.1) & 1329\\ \hline
    [0.1; 0.2) & 683\\ \hline
    [0.2; 0.3) & 1309\\ \hline
    [0.3; 0.4) & 691\\ \hline
    [0.4; 0.5) & 1315\\ \hline
    [0.5; 0.6) & 677\\ \hline
    [0.6; 0.7) & 1314\\ \hline
    [0.7; 0.8) & 679\\ \hline
    [0.8; 0.9) & 1318\\ \hline
    [0.9; 1) & 685\\ \hline
    \end{tabular}
\end{center}
\\

2) Находим ожидаемую частоту:
$$E = np^0 = 10000 \cdot 0.1 = 1000$$

3) Статистика:
$$\chi^2 = \sum \limits_{j = 1}^{10} \dfrac{(O_j - 1000)^2}{1000} = 1005.23$$

4) Уровень значимости 5\%. Ищем по таблице значение:
$$\chi^2_{k - 1; \alpha} = \chi^2_{9; 0.05} \approx 16.919$$

5) Очевидно, что $\chi^2 = 1005.23 > \chi_{k - 1, \alpha}^2 = 16.919$ $\Rightarrow$ гипотеза $H_0$ о том, что последовательность имеет распределение R(0, 1), отвергается.


%-------------------------------------

\newpage
\begin{center}
\subsection{Тест перестановок}
\end{center}

Воспользуемся нашей последовательностью $x_i$, в которой 10000 чисел лежат в пределах [0; 1).\\

1) Создаем два массива: 
$\\$1. triples - вектор эталонных троек, т.е. все варианты троек;
$\\$2. count - вектор, куда мы записываем частоты (сколько раз каждая из шести троек встречается в нашей последовательности). \\

После этого мы проходимся по всей последовательности и считаем сколько раз встречается каждая из
троек.\\

Получаем частоты: \textbf{664, 664, 345, 343, 660, 657}.\\

\begin{center}
    \begin{tabular}{ | c | c | }
    \hline
    тройка & частота \\ \hline
    \{1, 2, 3\} & 664\\ \hline
    \{1, 3, 2\} & 664\\ \hline
    \{2, 1, 3\} & 345\\ \hline
    \{2, 3, 1\} & 343\\ \hline
    \{3, 1, 2\} & 660\\ \hline
    \{3, 2, 1\} & 657\\ \hline
    \end{tabular}
\end{center}
\\

2) На основе полученных данных строим гистограмму:
\begin{center}
\includegraphics[scale = 0.45]{images/correct.jpg}
\end{center}

3) Переходим к проверке гипотезы о равновероятности перестановок.

$\\H_0$: перестановки равновероятны
$\\H_A$: перестановки не равновероятны\\

4) Находим ожидаемую частоту (имеем 3333 тройки и вероятность получения одной из перестановок $\frac{1}{6}$):
$$E = np^0 = 3333 \cdot \dfrac{1}{6} = 555.5$$

5) Статистика:
$$\chi^2 = \sum \limits_{j = 1}^{6} \dfrac{(O_j - 555.5)^2}{555.5} = 241.644$$

6) Уровень значимости 5\%. Ищем по таблице значение:
$$\chi^2_{k - 1; \alpha} = \chi^2_{5; 0.05} \approx 11.07$$

7) Очевидно, что $\chi^2 = 241.644 > \chi_{k - 1, \alpha}^2 = 11.07$ $\Rightarrow$ гипотеза $H_0$ о том, что перестановки равновероятны, отвергается.

%-------------------------------------

\newpage
\begin{center}
\section{Ответы}
\end{center}

2. Первые 10 чисел последовательности: 0.3308; 0.1949; 0.4472; 0.7159; 0.015; 0.0738; 0.1107; 0.8169; 0.043; 0.5126;\\

4. Нет оснований  отвергнуть гипотезу $H_0$ о том, что последовательность имеет распределение $R(0, 1)$;\\

5. Гипотеза $H_0$ о том, что последовательность имеет распределение $R(0, 1)$, отвергается;\\

6. Гипотеза $H_0$ о том, что перестановки равновероятны, отвергается $\Rightarrow$ последовательность не проходит тест перестановок.

%-------------------------------------

\newpage
\begin{center}
\section{Приложение}
\end{center}

\begin{flushright}
Приложение 1.
\end{flushright} 
\begin{verbatim}

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

vector<int> getSequence(int z1, int z2, int n) {
    vector<int> sequence;
    sequence.push_back(z1);
    sequence.push_back(z2);
    int i = 0;
    while (sequence.size() != n) {
// Перемножаем два четырехзначных числа и получаем 4 знака из середины.
// Новое число в последовательности может оказаться не 4-хзначным, т.к.в число
// может выглядеть следующим образом: xx00xxxx => запишется 2-хзначное число
        sequence.push_back(((sequence[i] * sequence[i + 1]) / 100) % 10000);
        i++;
    }
    return sequence;
}

vector<double> getRangedSequence(const vector<int> &sequence) {
    vector<double> new_sequence;
    new_sequence.reserve(sequence.size());
// Получаем нужную последовательность, в которой все значения в пределах от 0 до 1
    for (int i : sequence)
        new_sequence.push_back((double) i / 10000);
    return new_sequence;
}

void printSequence(vector<int> sequence) {
    for (int i = 0; i < sequence.size(); ++i) {
        cout << sequence[i] << " ";
        if ((i + 1) % 10 == 0) cout << "\n";
    }
}

void printDoubleSequence(vector<double> sequence) {
    for (int i = 0; i < sequence.size(); ++i) {
        cout << sequence[i] << " ";
        if ((i + 1) % 10 == 0) cout << "\n";
    }
}

vector<double> bordersOfRanges(double min, double step) {
    vector<double> borders;
    borders.push_back(min + step);

// Вектор верхних границ диапазонов
    for (int i = 1; i < 10; ++i)
        borders.push_back(borders[i - 1] + step);
    return borders;
}

vector<int> findFrequencies(const vector<double> &new_sequence, const vector<double> &borders) {
    vector<int> frequencies(10);
    for (int i = 0; i < new_sequence.size(); ++i) {
        for (int j = 0; j < borders.size(); ++j) {
            if (new_sequence[i] <= borders[j] - remainder(borders[j], 0.001)
                && new_sequence[i] >= borders[j - 1] - remainder(borders[j - 1], 0.001))
                frequencies[j]++;
        }
    }
    return frequencies;
}

double findStatistics(const vector<int> &frequencies_hyp, double expected, int n) {
    double chi = 0;
    for (int i = 0; i < n; ++i)
        chi += (double) ((frequencies_hyp[i] - expected) * (frequencies_hyp[i] - expected)) / expected;
    return chi;
}

void dataForHistogram(vector<double> new_sequence, int n) {
// Сортированный массив x_i
    sort(new_sequence.begin(), new_sequence.end());
    cout << "\nSorted sequence:\n";
    //printDoubleSequence(new_sequence);
// Шаг диапазона
    double step = (new_sequence[n - 1] - new_sequence[0]) / 10;
    cout << "\nStep of range = " << step << "\n";
// Верхние границы диапазонов
    vector<double> borders = bordersOfRanges(new_sequence[0], step);
    cout << "\nBorders:\n";
    for (int i = 0; i < 10; ++i)
        cout << "\t" << borders[i] << "\n";
// Ищем частоты
    vector<int> frequencies = findFrequencies(new_sequence, borders);
    cout << "\nFrequencies: ";
    printSequence(frequencies);
// Ищем частоты для проверки гипотезы
    vector<double> equal_borders = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1};
    vector<int> frequencies_hyp = findFrequencies(new_sequence, equal_borders);
    cout << "\nFrequencies for hypothesis: ";
    printSequence(frequencies_hyp);

// Вычисляем статистику
    cout << "\nChi^2 = " << findStatistics(frequencies_hyp, (double) n / 10, 10) << "\n";
}

void permutationTest(vector<double> new_sequence) {
    vector<int> count(6, 0);
    for (int i = 0; i < 9999; i += 3) {
        if (new_sequence[i] <= new_sequence[i + 1])
            if (new_sequence[i] <= new_sequence[i + 2])
                if (new_sequence[i + 1] <= new_sequence[i + 2])
                    count[0]++;
                else count[1]++;
            else count[3]++;
        else if (new_sequence[i] <= new_sequence[i + 2])
            count[2]++;
        else if (new_sequence[i + 1] <= new_sequence[i + 2])
            count[4]++;
        else count[5]++;
    }

    for (int c : count)
        cout << c << " ";
    cout << "\n\nChi^2 for permutation test = " << findStatistics(count, 555.5, 6) << "\n";
}

void getData(int n) {
// начальные значения из условия
    int z1 = 3308;
    int z2 = 1949;
    vector<int> sequence = getSequence(z1, z2, n);
    cout << "Sequence:\n";
    //printSequence(sequence);
    vector<double> new_sequence = getRangedSequence(sequence);
    cout << "\nSequence ranged [0, 1):\n";
    //printDoubleSequence(new_sequence);

    dataForHistogram(new_sequence, n);
    cout << "\nPermutation test: ";
    if (n == 10000)
        permutationTest(new_sequence);
}

int main() {
    getData(100);
    getData(10000);
    return 0;
}

\end{verbatim} 


\end{document}
